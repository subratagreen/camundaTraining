
assignment:
----------
create a workflow, use 2 usertask -
		first user task -(should not have assignee) , assignee should be assigned from the execution / task listener
		
		second user task will have a variable as assignee and that variable should be initialized from first usertask via execution / task listener
		
		
design a workflow which will process the reponse from this url (https://api.restful-api.dev/objects) and create a list of device names and assign those into execution variable.


create a main process (main-process)
	start 2 different process(process-1 and process-2) from main with dynamic business keys 
	

call a java class without implementing camunda apis (TaskListener/ExecutionListener/JavaDevegate) ->
	${myBean.myMethod()} - challenge is:- get the flow / execution scope.
	
	

start a process from normal java class without camunda apis
	(controller -> service -> BPMNUtilityService - startBpmnProcess(String processKey, String businessKey)
	
	http://localhost:8080/myApplication/bpmn/start/{processKey}/{businessKey}
	
	Advantage: from frontend, we will be able to instantiate a process (similar TaskList)
	
	when we are using, camunda apis, then we can write a code as below:
		RuntimeService runtimeService = execution.getProcessEngineServices().getRuntimeService();
		runtimeService.startProcessInstanceByKey ("process_to_call");



project execution timeline till production - use gateway, Pool/Lane, Link Event, Message, etc.. 

Agile:
	1. Story Grooming - 2
	2. Estimation - 1
	3. Sprint Planning - 1
	
	4.1 Development and Unit Test - 10		4.2 Test Case Writing - 3
	
	6. Test Case Execution - 3
	
	7. UAT Deployment - 1
	
	8.1 UAT Testing - 1 			8.2 Regression - 1
	
	10. Production Deployment - 1
	11. Sanity in Production - 1
	
	
	22 USP
	
=============================================================

define 3 modules - order, payment and delivery

payment module:
were user able to do payment in 30 sec
	if yes - proceed for delivery
	if no - throw an error - payment_timed_out

error in delivery module:
is this model available in warehouse,
	if yes then deliver the phone 
	if no then throw an error - out_of_stock
	
	


------------------------------------




Gateway
=======
Exclusive -> connected -> Exclusive : works as expected
Exclusive -> connected -> Parallel : does not work because parallel gw will for all braches to complete but 	
									 exclusive will execute only one bnch at a time depending condition match
Exclusive -> connected -> Inclusive : works as expected


Parallel -> connected -> Exclusive : does not work as expected because the flow after exclusive gw will execute
									 muliple times depending onnumber of braches
Parallel -> connected -> Parallel : works as expected
Parallel -> connected -> Inclusive : works as expected


Inclusive -> connected -> Exclusive : does not work as expected because the flow after exclusive gw will execute
									 muliple times depending onnumber of braches
Inclusive -> connected -> Parallel : does not work because parallel gw will for all braches to complete but 	
									 exclusive will execute only one bnch at a time depending condition match
Inclusive -> connected -> Inclusive : works as expected




=================== Rest API ==============

http://localhost:8080/engine-rest/signal
{
    "name": "Signal-q123",
    "variable": {
        "alertType": {
            "name": "Subrat"
        }
    }
}



http://localhost:8080/engine-rest/message
{
    "messageName": "Message_one",
    "businessKey": "jjj111",
    "processVariables": {
        "food": {
            "value": "pizza",
            "type": "String"
        }
    }
}


http://localhost:8080/engine-rest/condition
{
    "variables": {
        "varr1": {
            "value": "100",
            "type": "Integer"
        }
    },
    "businessKey":"wewe"
}



http://localhost:8080/engine-rest/condition


{
    "variables": {
        "var1": {
            "value": 100,
            "type": "integer"
        }
    },
    "businessKey":"ASD123"
}

========
1. add a text file in variable scope in a service task
	{"name":"subrat","id":"C001","age":35}

2. read the text file in a service task, convert the json content into customer object and add customer object in variable scope

===================
configure multiple compensation in transaction sub process, then use cancel throw-catch in that transaction sub-process
======================

secure camunda rest-api using spring security and allow tasklist/cockpit to use camunda users

==========

look into wildfly server configuration for process engine definition 
where to define multiple process engine
in wildfly - define 2 tenants 
deploy 1 process def in 1 tenatn and same process with small change in diff tenant... check the deployment and start processes
 
============= by Subrat Das
3:17 PM
Subrat Das
=============
in spring boot, app - create 2 tenants  by Subrat Das
3:17 PM
Subrat Das
in spring boot, app - create 2 tenants 
programmatically (java api) - deploy 2 vers... by Subrat Das
3:18 PM
Subrat Das
programmatically (java api) - deploy 2 version of same process into different tenants
------------------- by Subrat Das
5:17 PM
Subrat Das
-------------------
create 2 users create a group add users to ... by Subrat Das
5:19 PM
Subrat Das
create 2 users
create a group
add users to group
give that group - application access and task access
create a process and assign user task to that user/group
now, deploy and start the process
login using new user credentials 
check the access
 
------------- by Subrat Das
5:19 PM
Subrat Das
-------------
use spring security -  create a spring boot... by Subrat Das
5:21 PM
Subrat Das
use spring security - 
create a spring boot application with camunda dependency
add spring security 
add users authentication and authorization 
create api to start a process
secure the apis using spring authetication 
 
has context menu

=======================

request for new connection (customer)
	- online form fillup (name, address, mobile, plan)
	- submitted to BB Provider
	- timeout - 2 days, after 2 days, it will be escalated to higher mgmt
	
registration of customer (account/operation)
	- create account (name, address, mobile, plan)
	- select a plan (list of plans)
	- payment
		- cash
		- online
	- payment recvd
	- registration completed
	- timeout - 1 day, after 1 day, it will be escalated to higher mgmt
	
installation (implementation/operation)
	- get notification
	- get account info
	- manually install (LAN, BB, FIBER, Wireless Fiber)
	- setup with laptop/desktop/mobile/tv/
	- installation done
	- call us directly (solve immidiately) - 7 days
	- after 7 days, call customer care and raise a ticket
	- timeout - 2 day, after 2 day, it will be escalated to higher mgmt
	
monthly/periodically payment 
	- notification is automated via online, email, message, calls 
	- payment
		- cash
		- online 
		
plan change
	- get list of plans 
	- select a plan
	- if reqd, do the payment 

raise a ticket
	- automated device/network testing running in app/online website 
		- test modem/fiber device/sim
		- test network in the area 
		- do speed test 
		- reboot device
	- connects to customer care 
		- listen to the problem
		- reboot device 
		- create a ticket 
		
solve the ticket (implementation/operation)
	- get notification
	- get account info
	- check the network device 
	- also check laptop/desktop/mobile/tv/
	- resolve the problem
	- timeout - 2 days, after 2 days, it will be escalated to higher mgmt
	
